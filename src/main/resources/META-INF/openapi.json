{
    "openapi": "3.0.2",
    "info": {
        "title": "qiip-api",
        "version": "1.0.0",
        "description": "descripci√≥n api qiip",
        "contact": {
            "name": "qiip + valtica",
            "email": "qiip@qiip.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "servers": [
        {
            "url": "http://test.qiip.com",
            "description": ""
        }
    ],
    "paths": {
        "/accounts": {
            "summary": "Path used to manage the list of accounts.",
            "description": "The REST endpoint/path used to list and create zero or more `account` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/account"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `account` entities."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Error"
                    }
                },
                "operationId": "getaccounts",
                "summary": "List All accounts",
                "description": "Gets a list of all `account` entities."
            },
            "post": {
                "requestBody": {
                    "description": "A new `account` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/account"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response."
                    }
                },
                "operationId": "createaccount",
                "summary": "Create a account",
                "description": "Creates a new instance of a `account`."
            }
        },
        "/accounts/{accountId}": {
            "summary": "Path used to manage a single account.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `account`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/account"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `account`."
                    }
                },
                "operationId": "getaccount",
                "summary": "Get a account",
                "description": "Gets the details of a single instance of a `account`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `account` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/account"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateaccount",
                "summary": "Update a account",
                "description": "Updates an existing `account`."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteaccount",
                "summary": "Delete a account",
                "description": "Deletes an existing `account`."
            },
            "parameters": [
                {
                    "name": "accountId",
                    "description": "A unique identifier for a `account`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users": {
            "summary": "Path used to manage the list of users.",
            "description": "The REST endpoint/path used to list and create zero or more `User` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `User` entities."
                    }
                },
                "operationId": "getusers",
                "summary": "List All users",
                "description": "Gets a list of all `User` entities."
            },
            "post": {
                "requestBody": {
                    "description": "A new `User` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response."
                    }
                },
                "operationId": "createUser",
                "summary": "Create a User",
                "description": "Creates a new instance of a `User`."
            }
        },
        "/users/{userId}": {
            "summary": "Path used to manage a single User.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `User`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `User`."
                    }
                },
                "operationId": "getUser",
                "summary": "Get a User",
                "description": "Gets the details of a single instance of a `User`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `User` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateUser",
                "summary": "Update a User",
                "description": "Updates an existing `User`."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteUser",
                "summary": "Delete a User",
                "description": "Deletes an existing `User`."
            },
            "parameters": [
                {
                    "name": "userId",
                    "description": "A unique identifier for a `User`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/services": {

        }
    },
    "components": {
        "schemas": {
            "account": {
                "description": "cuenta de ahorro o corriente",
                "type": "object"
            },
            "User": {
                "description": "",
                "type": "object"
            }
        },
        "securitySchemes": {
            "keycloak": {
                "openIdConnectUrl": "http://keycloak.qiip.com",
                "type": "openIdConnect",
                "description": "keycloak"
            }
        }
    },
    "tags": [
        {
            "name": "admin",
            "description": "admin"
        },
        {
            "name": "user",
            "description": "user"
        }
    ]
}